# Stage 1: Build environment
FROM ubuntu:20.04 AS build

# Set environment variables to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && apt-get install -y \
    curl git unzip xz-utils zip libglu1-mesa openjdk-17-jdk wget \
    && apt-get clean

# Set up a non-root user
RUN useradd -ms /bin/bash flutteruser
USER flutteruser
WORKDIR /home/flutteruser

# Install Android SDK
ENV ANDROID_SDK_ROOT=/home/flutteruser/android-sdk
RUN mkdir -p ${ANDROID_SDK_ROOT}/cmdline-tools
RUN wget -q https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O android-tools.zip \
    && unzip -q android-tools.zip -d ${ANDROID_SDK_ROOT}/cmdline-tools \
    && mv ${ANDROID_SDK_ROOT}/cmdline-tools/cmdline-tools ${ANDROID_SDK_ROOT}/cmdline-tools/latest \
    && rm android-tools.zip
ENV PATH="${PATH}:${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${ANDROID_SDK_ROOT}/platform-tools"

# Accept Android SDK licenses and install required components
RUN yes | sdkmanager --licenses \
    && sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

# Install Flutter SDK (specific version 3.29.0)
ENV FLUTTER_HOME=/home/flutteruser/flutter
RUN git clone https://github.com/flutter/flutter.git ${FLUTTER_HOME} \
    && cd ${FLUTTER_HOME} \
    && git checkout 35c388afb5
ENV PATH="${PATH}:${FLUTTER_HOME}/bin"

# Pre-download Flutter dependencies
RUN flutter doctor

# Copy Flutter project files from frontend/cashflow
COPY --chown=flutteruser:flutteruser frontend/cashflow /app

# Debug: List contents of /app
RUN ls -la /app

WORKDIR /app

RUN flutter pub get
RUN flutter build apk --release --no-tree-shake-icons --stacktrace --debug

# Stage 2: Runtime with HTTP server
FROM ubuntu:20.04
WORKDIR /app

# Install Python to serve the APK
RUN apt-get update && apt-get install -y python3 \
    && apt-get clean

# Copy the built APK from the build stage
COPY --from=build /app/build/app/outputs/flutter-apk/app-release.apk /app/app.apk

EXPOSE 8080
CMD ["python3", "-m", "http.server", "8080"]